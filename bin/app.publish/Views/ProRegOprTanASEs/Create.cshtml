@model Crud2.Models.ProRegOprTanASE

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Home/Menu.cshtml";
    string titulo = ViewBag.codEquipo;
}

<h2>Registro Operacional Tanque @titulo</h2>
<link rel="stylesheet" href="~/Content/layout.css">

<style>
    .linea {
        display: inline-block;
        width: 160px;
        padding-right: 20px;
    }

    .center {
        margin: auto;
        width: 60%;
        padding: 10px;
    }
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <body>

        <div class="container">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <input type="hidden" name="codEquipo" value="@titulo" />
            <input type="hidden" name="codRegistro" value="@ViewBag.codRegistro" />
            <input type="hidden" name="fecha" value="@ViewBag.fecha" />
            <input type="hidden" name="estado" value="@ViewBag.estado" />
            <br />
            <div class="form-group ">
                <label class="col-form-label" style="font-size: 18px; font-weight: normal">Hora: (HH:mm)</label>
                <input id="hora1" type="text" class="form-control" name="hora" inputmode="decimal" required onkeypress="return event.key!='e'">
            </div>

            <div class="">
                <!-- RCAJAS label class="" style="font-size: 18px; font-weight: bold">Esterilización del equipo</label> -->
                <br />
                @Html.Label("PAROPERTASE01", "Temperatura de esterilización del equipo", htmlAttributes: new { @class = " ", @style = "font-size: 18px; font-weight: normal ;margin-top:15px" })
                <br /><label class="" style="color:crimson; margin-right: 20px;">min:121</label>
                <div>
                    @Html.TextBox("PAROPERTASE01", null, new { @class = "form-control", @type = "text", @onkeyup = "validarEntrada(this)", @inputmode = "decimal", @onkeypress = "return event.key!='e'" })
                    @Html.ValidationMessage("PAROPERTASE1", "", new { @class = "text-danger" })
                </div>
            </div>


            @Html.Label("PAROPERTASE02", "Tiempo de esterilización del equipo", htmlAttributes: new { @class = "control-label ", @style = "font-size: 18px; font-weight: normal ;margin-top:15px" })
            <br /><label class="" style="color:crimson; margin-right: 20px;">min:30</label>
            <div>
                @Html.TextBox("PAROPERTASE02", null, new { @class = "form-control", @type = "text", @onkeyup = "validarEntrada(this)", @inputmode = "decimal", @onkeypress = "return event.key!='e'" })
                @Html.ValidationMessage("PAROPERTASE02", "", new { @class = "text-danger" })
            </div>

            <br />
            <!--RCAJAS <label class="" style="font-size: 18px; font-weight: bold">Temperatura de Operación</label> -->

            @Html.Label("PAROPERTASE03", "Temperatura salida REDA a Tq Aséptico T2CT", htmlAttributes: new { @class = "control-label ", @style = "font-size: 18px; font-weight: normal ;margin-top:15px" })
            <br /><label class="" style="color:crimson; margin-right: 20px;">min:25</label>
            <label style="color:crimson">max:30</label>
            <div>
                @Html.TextBox("PAROPERTASE03", null, new { @class = "form-control", @type = "text", @onkeyup = "validarEntrada(this)", @inputmode = "decimal", @onkeypress = "return event.key!='e'" })
                @Html.ValidationMessage("PAROPERTASE03", "", new { @class = "text-danger" })
            </div>



            @Html.Label("PAROPERTASE04", "Temperatura de producto TT 101", htmlAttributes: new { @class = "control-label ", @style = "font-size: 18px; font-weight: normal ;margin-top:15px" })
            <br /><label class="" style="color:crimson; margin-right: 20px;">min:25</label>
            <label style="color:crimson">max:30</label>
            <div>
                @Html.TextBox("PAROPERTASE04", null, new { @class = "form-control", @type = "text", @onkeyup = "validarEntrada(this)", @inputmode = "decimal", @onkeypress = "return event.key!='e'" })
                @Html.ValidationMessage("PAROPERTASE04", "", new { @class = "text-danger" })
            </div>
            <br />
            <!-- RCAJAS <label class="" style="font-size: 18px; font-weight: bold">Temperatura de Barreras de Vapor</label> -->



            @Html.Label("PAROPERTASE05", "Barrera de vapor valvula 101 TT 160", htmlAttributes: new { @class = "control-label ", @style = "font-size: 18px; font-weight: normal; margin-top:15px" })
            <br /><label class="" style="color:crimson; margin-right: 20px;">min:105</label>
            <label style="color:crimson">max:120</label>
            <div>
                @Html.TextBox("PAROPERTASE05", null, new { @class = "form-control", @type = "text", @onkeyup = "validarEntrada(this)", @inputmode = "decimal", @onkeypress = "return event.key!='e'" })
                @Html.ValidationMessage("PAROPERTASE05", "", new { @class = "text-danger" })
            </div>



            @Html.Label("PAROPERTASE06", "Barrera de vapor TT 140 (V fin Tq)", htmlAttributes: new { @class = "control-label ", @style = "font-size: 18px; font-weight: normal ;margin-top:15px" })
            <br /><label class="" style="color:crimson; margin-right: 20px;">min:105</label>
            <label style="color:crimson">max:120</label>
            <div>
                @Html.TextBox("PAROPERTASE06", null, new { @class = "form-control", @type = "text", @onkeyup = "validarEntrada(this)", @inputmode = "decimal", @onkeypress = "return event.key!='e'" })
                @Html.ValidationMessage("PAROPERTASE06", "", new { @class = "text-danger" })
            </div>



            @Html.Label("PAROPERTASE07", "Barrera de vapor TT 145 (V fin Tq)", htmlAttributes: new { @class = "control-label ", @style = "font-size: 18px; font-weight: normal ;margin-top:15px" })
            <br /><label class="" style="color:crimson; margin-right: 20px;">min:105</label>
            <label style="color:crimson">max:120</label>
            <div>
                @Html.TextBox("PAROPERTASE07", null, new { @class = "form-control", @type = "text", @onkeyup = "validarEntrada(this)", @inputmode = "decimal", @onkeypress = "return event.key!='e'" })
                @Html.ValidationMessage("PAROPERTASE07", "", new { @class = "text-danger" })
            </div>

            <br />
            <!--RCAJAS <label class="" style="font-size: 18px; font-weight: bold">Presiones de Operación</label>-->


            @Html.Label("PAROPERTASE08", "Presión Tanque", htmlAttributes: new { @class = "control-label ", @style = "font-size: 18px; font-weight: normal ;margin-top:15px" })
            <br /><label class="" style="color:crimson; margin-right: 20px;">min:0,3</label>
            <div>
                @Html.TextBox("PAROPERTASE08", null, new { @class = "form-control", @type = "text", @onkeyup = "validarEntrada(this)", @inputmode = "decimal", @onkeypress = "return event.key!='e'" })
                @Html.ValidationMessage("PAROPERTASE08", "", new { @class = "text-danger" })
            </div>



            @Html.Label("PAROPERTASE09", "Presión manómetro PI", htmlAttributes: new { @class = "control-label ", @style = "font-size: 18px; font-weight: normal ;margin-top:15px" })
            <br /><label class="" style="color:crimson; margin-right: 20px;">min:0,3</label>
            <div>
                @Html.TextBox("PAROPERTASE09", null, new { @class = "form-control", @type = "text", @onkeyup = "validarEntrada(this)", @inputmode = "decimal", @onkeypress = "return event.key!='e'" })
                @Html.ValidationMessage("PAROPERTASE09", "", new { @class = "text-danger" })
            </div>

            <br />
            <!-- RCAJAS<label class="" style="font-size: 18px; font-weight: bold">CIP</label>-->


            @Html.Label("PAROPERTASE10", "Concentración de soda", htmlAttributes: new { @class = "control-label ", @style = "font-size: 18px; font-weight: normal ;margin-top:15px" })
            <br /><label class="" style="color:crimson; margin-right: 20px;">min:1,8</label>
            <label style="color:crimson">max:2,2</label>
            <div>
                @Html.TextBox("PAROPERTASE10", null, new { @class = "form-control", @type = "text", @onkeyup = "validarEntrada(this)", @inputmode = "decimal", @onkeypress = "return event.key!='e'" })
                @Html.ValidationMessage("PAROPERTASE10", "", new { @class = "text-danger" })
            </div>



            @Html.Label("PAROPERTASE11", "Concentración de ácido", htmlAttributes: new { @class = "control-label ", @style = "font-size: 18px; font-weight: normal ;margin-top:15px" })
            <br /><label class="" style="color:crimson; margin-right: 20px;">min:0,8</label>
            <label style="color:crimson">max:1,2</label>
            <div>
                @Html.TextBox("PAROPERTASE11", null, new { @class = "form-control", @type = "text", @onkeyup = "validarEntrada(this)", @inputmode = "decimal", @onkeypress = "return event.key!='e'" })
                @Html.ValidationMessage("PAROPERTASE11", "", new { @class = "text-danger" })
            </div>



            @Html.Label("PAROPERTASE12", "pH enjuague final ", htmlAttributes: new { @class = "control-label ", @style = "font-size: 18px; font-weight: normal ;margin-top:15px" })
            <br /><label class="" style="color:crimson; margin-right: 20px;">min:6,5</label>
            <label style="color:crimson">max:7,4</label>
            <div>
                @Html.TextBox("PAROPERTASE12", null, new { @class = "form-control", @type = "text", @onkeyup = "validarEntrada(this)", @inputmode = "decimal", @onkeypress = "return event.key!='e'" })
                @Html.ValidationMessage("PAROPERTASE12", "", new { @class = "text-danger" })
            </div>

            @Html.Label("PAROPERTASE13", "Fujo de entrada de producto al equipo FT1", htmlAttributes: new { @class = "control-label ", @style = "font-size: 18px; font-weight: normal ;margin-top:15px" })
            <br /><label class="" style="color:crimson; margin-right: 20px;">min:14000</label>

            <div>
                @Html.TextBox("PAROPERTASE13", null, new { @class = "form-control", @type = "text", @onkeyup = "validarEntrada(this)", @inputmode = "decimal", @onkeypress = "return event.key!='e'" })
                @Html.ValidationMessage("PAROPERTASE13", "", new { @class = "text-danger" })
            </div>

            <br /><br />
            <div>
                <div class=" linea">
                    <input type="submit" value="Guardar" class="btn btn-success btn-block" id="guardarBtn" />
                </div>
                <div class=" linea">
                    @Html.ActionLink("Regresar", "ListaForms", new { codEquipo = ViewBag.codEquipo, codRegistro = @ViewBag.codRegistro, fecha = @ViewBag.fecha, estado = @ViewBag.estado }, new { @class = "btn btn-info btn-block" })
                </div>
            </div>

        </div>

    </body>

}


@section scripts{

    <script>
        document.getElementById("hora1").focus();

        const horaInput = document.getElementById("hora1");

        horaInput.addEventListener("input", function () {
            const value = horaInput.value;



            if (value.length > 5) {
                // Si se ingresaron más de 5 caracteres, eliminamos el último carácter
                horaInput.value = value.substring(0, 5);

                return;
            }

            if (value.length === 2) {
                // Si el usuario ingresó dos caracteres, agregamos los dos puntos automáticamente
                horaInput.value = value + ":";
                const hora = parseInt(value);
                if (hora >= 24) {
                    alert("El numero de horas no puede exceder de 24");
                    horaInput.value = "";
                }
            }

            if (value.length === 5) {
                // Verificamos que los minutos ingresados sean válidos
                const minutos = parseInt(value.substring(3, 5));
                if (minutos < 0 || minutos > 59) {
                    alert("Los minutos ingresados no deben exceder de 59");
                    horaInput.value = "";
                    return;
                }
            }
        });

        const form = document.querySelector("form");
        form.addEventListener("submit", function (event) {
            const value = horaInput.value;

            if (value.length !== 5) {
                alert("La hora ingresada cumple con el formato de HH:mm");
                event.preventDefault();
                return;
            }

            // Verificamos que las horas ingresadas sean válidas
            const horas = parseInt(value.substring(0, 2));
            if (horas < 0 || horas > 23) {
                alert("Las horas ingresadas no son válidasef.");
                horaInput.value = "";
                event.preventDefault();
                return;
            }
        });



        horaInput.addEventListener("keydown", function (event) {
            // Obtenemos el código de la tecla presionada
            const key = event.keyCode || event.charCode;

            // Obtenemos el rango de caracteres seleccionados
            const selectionStart = horaInput.selectionStart;
            const selectionEnd = horaInput.selectionEnd;

            // Verificamos si no hay caracteres seleccionados y si la tecla presionada es la tecla de retroceso (8) o la tecla Supr (46), si es así, permitimos que se borre todo el contenido del campo
            if (selectionStart === selectionEnd && (key === 8 || key === 46)) {
                horaInput.value = "";
            } else {
                // Verificamos si la tecla presionada es un número (del 0 al 9), las teclas de flecha (37-40), si no es así, cancelamos el evento
                if (!((key >= 48 && key <= 57) || (key >= 96 && key <= 105) || (key >= 37 && key <= 40))) {
                    event.preventDefault();
                }
            }
        });


        function validarEntrada(input) {
            var patron = /^(\d+([,.]\d{0,1})?)?$/;
            input.value = input.value.replace(/\./g, ',');
            var valor = input.value;
            if (!patron.test(valor)) {
                input.value = input.value.slice(0, -1);

            }
        }

    </script>
}